sylius_grid:
    templates:
        action:
            importProduct: '@WebgriffeSyliusAkeneoPlugin\Product\Grid\Action\import.html.twig'
    grids:
        sylius_admin_product:
            actions:
                item:
                    import:
                        type: importProduct
                        label: webgriffe_sylius_akeneo.ui.schedule_import
                        options:
                            link:
                                route: webgriffe_sylius_akeneo_product_import
                                parameters:
                                    productId: resource.id
                            icon: cloud download
                            color: violet
        webgriffe_sylius_akeneo_admin_item_import_result:
            driver:
                name: doctrine/orm
                options:
                    class: Webgriffe\SyliusAkeneoPlugin\Entity\ItemImportResult
            sorting:
                createdAt: desc
            fields:
                createdAt:
                    type: datetime
                    label: sylius.ui.created_at
                    sortable: ~
                akeneoEntity:
                    type: string
                    label: webgriffe_sylius_akeneo.ui.entity
                    sortable: ~
                akeneoIdentifier:
                    type: string
                    label: webgriffe_sylius_akeneo.ui.identifier
                    sortable: ~
                successful:
                    type: twig
                    label: webgriffe_sylius_akeneo.ui.successful
                    options:
                        template: '@WebgriffeSyliusAkeneoPlugin\ItemImportResult\Grid\Field\successful.html.twig'
                message:
                    type: string
                    label: webgriffe_sylius_akeneo.ui.message
            filters:
                createdAt:
                    type: date
                    label: sylius.ui.created_at
                akeneoEntity:
                    type: string
                    label: webgriffe_sylius_akeneo.ui.entity
                akeneoIdentifier:
                    type: string
                    label: webgriffe_sylius_akeneo.ui.identifier
                successful:
                    type: boolean
                    label: webgriffe_sylius_akeneo.ui.successful
                message:
                    type: string
                    label: webgriffe_sylius_akeneo.ui.message            

framework:
    messenger:
        routing:
            'Webgriffe\SyliusAkeneoPlugin\Message\ItemImport': main
    
        buses:
            webgriffe_sylius_akeneo.command_bus:
                middleware:
                    - 'webgriffe_sylius_akeneo.middleware.item_import_result_persister'
                    
                    # each time a message is handled, the Doctrine connection
                    # is "pinged" and reconnected if it's closed. Useful
                    # if your workers run for a long time and the database
                    # connection is sometimes lost
                    - doctrine_ping_connection
                    
                    # After handling, the Doctrine connection is closed,
                    # which can free up database connections in a worker,
                    # instead of keeping them open forever
                    - doctrine_close_connection

                    # logs an error when a Doctrine transaction was opened but not closed
                    - doctrine_open_transaction_logger

                    # wraps all handlers in a single Doctrine transaction
                    # handlers do not need to call flush() and an error
                    # in any handler will cause a rollback
                    - doctrine_transaction

monolog:
    channels: ['webgriffe_sylius_akeneo_plugin']
        
